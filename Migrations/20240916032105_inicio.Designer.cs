// <auto-generated />
using System;
using Cooperativa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cooperativa.Migrations
{
    [DbContext(typeof(CooperativaContext))]
    [Migration("20240916032105_inicio")]
    partial class inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cooperativa.Models.Ahorros", b =>
                {
                    b.Property<int>("ahorroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ahorroID"));

                    b.Property<string>("comprobante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detalleAhorro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaAhorro")
                        .HasColumnType("datetime2");

                    b.Property<float>("montoAhorro")
                        .HasColumnType("real");

                    b.Property<string>("socio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sociossocioID")
                        .HasColumnType("int");

                    b.HasKey("ahorroID");

                    b.HasIndex("sociossocioID");

                    b.ToTable("Ahorros");
                });

            modelBuilder.Entity("Cooperativa.Models.Bancos", b =>
                {
                    b.Property<int>("BancoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BancoID"));

                    b.Property<int?>("creditoscreditoID")
                        .HasColumnType("int");

                    b.Property<float>("interes")
                        .HasColumnType("real");

                    b.HasKey("BancoID");

                    b.HasIndex("creditoscreditoID");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Cooperativa.Models.Clientes", b =>
                {
                    b.Property<int>("clienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("clienteID"));

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("fechaDeNacimiento")
                        .HasColumnType("date");

                    b.Property<int>("inscripcion")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Cooperativa.Models.Creditos", b =>
                {
                    b.Property<int>("creditoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("creditoID"));

                    b.Property<float>("cuoata")
                        .HasColumnType("real");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCredito")
                        .HasColumnType("datetime2");

                    b.Property<float>("interes")
                        .HasColumnType("real");

                    b.Property<float>("montoCredito")
                        .HasColumnType("real");

                    b.Property<string>("socio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sociossocioID")
                        .HasColumnType("int");

                    b.Property<int>("tiempo")
                        .HasColumnType("int");

                    b.Property<float>("totalCredito")
                        .HasColumnType("real");

                    b.HasKey("creditoID");

                    b.HasIndex("sociossocioID");

                    b.ToTable("Creditos");
                });

            modelBuilder.Entity("Cooperativa.Models.Depositos", b =>
                {
                    b.Property<int>("depositoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("depositoID"));

                    b.Property<float>("cantidadDeposito")
                        .HasColumnType("real");

                    b.Property<string>("cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("clientesclienteID")
                        .HasColumnType("int");

                    b.Property<string>("detalleDeposito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaDeposito")
                        .HasColumnType("datetime2");

                    b.HasKey("depositoID");

                    b.HasIndex("clientesclienteID");

                    b.ToTable("Depositos");
                });

            modelBuilder.Entity("Cooperativa.Models.Eventos", b =>
                {
                    b.Property<int>("eventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eventoID"));

                    b.Property<float>("costoEvento")
                        .HasColumnType("real");

                    b.Property<string>("detalleEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("lugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("socio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sociossocioID")
                        .HasColumnType("int");

                    b.Property<string>("tipoEvento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("eventoID");

                    b.HasIndex("sociossocioID");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Cooperativa.Models.Login", b =>
                {
                    b.Property<int>("loginID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("loginID"));

                    b.Property<int?>("clientesclienteID")
                        .HasColumnType("int");

                    b.Property<string>("contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sociossocioID")
                        .HasColumnType("int");

                    b.Property<string>("usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("loginID");

                    b.HasIndex("clientesclienteID");

                    b.HasIndex("sociossocioID");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("Cooperativa.Models.Pasivos", b =>
                {
                    b.Property<int>("pasivoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pasivoID"));

                    b.Property<float>("costoPasivo")
                        .HasColumnType("real");

                    b.Property<string>("detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaPasivo")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pasivoID");

                    b.ToTable("Pasivos");
                });

            modelBuilder.Entity("Cooperativa.Models.PasivosClientes", b =>
                {
                    b.Property<int>("pasivoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pasivoCliente"));

                    b.Property<string>("cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("clientesclienteID")
                        .HasColumnType("int");

                    b.Property<float>("costoPasivo")
                        .HasColumnType("real");

                    b.Property<string>("detallePasivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaPasivo")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pasivoCliente");

                    b.HasIndex("clientesclienteID");

                    b.ToTable("PasivosClientes");
                });

            modelBuilder.Entity("Cooperativa.Models.Retiros", b =>
                {
                    b.Property<int>("retiroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("retiroID"));

                    b.Property<float>("cantidadRetiro")
                        .HasColumnType("real");

                    b.Property<string>("cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("clientesclienteID")
                        .HasColumnType("int");

                    b.Property<string>("detalleRetiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaRetiro")
                        .HasColumnType("datetime2");

                    b.HasKey("retiroID");

                    b.HasIndex("clientesclienteID");

                    b.ToTable("Retiros");
                });

            modelBuilder.Entity("Cooperativa.Models.Socios", b =>
                {
                    b.Property<int>("socioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("socioID"));

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("fechaDeNacimiento")
                        .HasColumnType("date");

                    b.Property<int>("inscripcion")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("socio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("socioID");

                    b.ToTable("Socios");
                });

            modelBuilder.Entity("Cooperativa.Models.Transferencias", b =>
                {
                    b.Property<int>("trnsferenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("trnsferenciaID"));

                    b.Property<float>("cantidadTransferencia")
                        .HasColumnType("real");

                    b.Property<string>("cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("clientesclienteID")
                        .HasColumnType("int");

                    b.Property<string>("detalleTransferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaTransferencia")
                        .HasColumnType("datetime2");

                    b.HasKey("trnsferenciaID");

                    b.HasIndex("clientesclienteID");

                    b.ToTable("Transferencias");
                });

            modelBuilder.Entity("Cooperativa.Models.Utilidades", b =>
                {
                    b.Property<int>("utilidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("utilidadID"));

                    b.Property<float>("costoEvento")
                        .HasColumnType("real");

                    b.Property<float>("costoPasivo")
                        .HasColumnType("real");

                    b.Property<int?>("creditoscreditoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaUtilidad")
                        .HasColumnType("datetime2");

                    b.Property<string>("inscripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("interes")
                        .HasColumnType("real");

                    b.Property<float>("montoAhorro")
                        .HasColumnType("real");

                    b.Property<string>("socio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sociossocioID")
                        .HasColumnType("int");

                    b.Property<float>("totalCredito")
                        .HasColumnType("real");

                    b.Property<float>("utilidadPorSocio")
                        .HasColumnType("real");

                    b.Property<float>("utilidadTotal")
                        .HasColumnType("real");

                    b.HasKey("utilidadID");

                    b.HasIndex("creditoscreditoID");

                    b.HasIndex("sociossocioID");

                    b.ToTable("Utilidades");
                });

            modelBuilder.Entity("Cooperativa.Models.Ahorros", b =>
                {
                    b.HasOne("Cooperativa.Models.Socios", "socios")
                        .WithMany()
                        .HasForeignKey("sociossocioID");

                    b.Navigation("socios");
                });

            modelBuilder.Entity("Cooperativa.Models.Bancos", b =>
                {
                    b.HasOne("Cooperativa.Models.Creditos", "creditos")
                        .WithMany()
                        .HasForeignKey("creditoscreditoID");

                    b.Navigation("creditos");
                });

            modelBuilder.Entity("Cooperativa.Models.Creditos", b =>
                {
                    b.HasOne("Cooperativa.Models.Socios", "socios")
                        .WithMany()
                        .HasForeignKey("sociossocioID");

                    b.Navigation("socios");
                });

            modelBuilder.Entity("Cooperativa.Models.Depositos", b =>
                {
                    b.HasOne("Cooperativa.Models.Clientes", "clientes")
                        .WithMany()
                        .HasForeignKey("clientesclienteID");

                    b.Navigation("clientes");
                });

            modelBuilder.Entity("Cooperativa.Models.Eventos", b =>
                {
                    b.HasOne("Cooperativa.Models.Socios", "socios")
                        .WithMany()
                        .HasForeignKey("sociossocioID");

                    b.Navigation("socios");
                });

            modelBuilder.Entity("Cooperativa.Models.Login", b =>
                {
                    b.HasOne("Cooperativa.Models.Clientes", "clientes")
                        .WithMany()
                        .HasForeignKey("clientesclienteID");

                    b.HasOne("Cooperativa.Models.Socios", "socios")
                        .WithMany()
                        .HasForeignKey("sociossocioID");

                    b.Navigation("clientes");

                    b.Navigation("socios");
                });

            modelBuilder.Entity("Cooperativa.Models.PasivosClientes", b =>
                {
                    b.HasOne("Cooperativa.Models.Clientes", "clientes")
                        .WithMany()
                        .HasForeignKey("clientesclienteID");

                    b.Navigation("clientes");
                });

            modelBuilder.Entity("Cooperativa.Models.Retiros", b =>
                {
                    b.HasOne("Cooperativa.Models.Clientes", "clientes")
                        .WithMany()
                        .HasForeignKey("clientesclienteID");

                    b.Navigation("clientes");
                });

            modelBuilder.Entity("Cooperativa.Models.Transferencias", b =>
                {
                    b.HasOne("Cooperativa.Models.Clientes", "clientes")
                        .WithMany()
                        .HasForeignKey("clientesclienteID");

                    b.Navigation("clientes");
                });

            modelBuilder.Entity("Cooperativa.Models.Utilidades", b =>
                {
                    b.HasOne("Cooperativa.Models.Creditos", "creditos")
                        .WithMany()
                        .HasForeignKey("creditoscreditoID");

                    b.HasOne("Cooperativa.Models.Socios", "socios")
                        .WithMany()
                        .HasForeignKey("sociossocioID");

                    b.Navigation("creditos");

                    b.Navigation("socios");
                });
#pragma warning restore 612, 618
        }
    }
}
